package limite;import Model.*;import controle.*;import limite.*;import controle.ControleCorretor;import java.awt.BorderLayout;import java.awt.Dimension;import java.awt.GridLayout;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import java.awt.event.ItemEvent;import java.awt.event.ItemListener;import java.text.SimpleDateFormat;import java.util.ArrayList;import java.util.Calendar;import java.util.Date;import javax.swing.*;public class LimiteCorretor extends JFrame implements ActionListener {    //controlador    ControleCorretor ctrCorretor;    //declaração dos botões    JButton btCadastrar;    JButton btConsultar;    //Panel    JPanel panel;    //labels    JLabel lbOpcoes;    //sera usado para editar ou excluir imóvel    int index = 0;    //contrutor    public LimiteCorretor(ControleCorretor ctrCorretor) {        this.ctrCorretor = ctrCorretor;//Armazena o controlador Principal numa variavel    }    @Override    public void actionPerformed(ActionEvent e) {    }    //metodo para exibir o formulário de cadastro de imóveis    void cadastraCorretor() {        //Inicializa Tela        JFrame frCadastra = new JFrame();        //Inicializa Painel        JPanel pCadastro = new JPanel();        //Inicializa TextFields         JTextField tfNome = new JTextField("");        JTextField tfCreci = new JTextField("");        JTextField tfCpf = new JTextField("");        JTextField tfEmail = new JTextField("");        JTextField tfFone = new JTextField("");        JTextField tfPercCorretagem = new JTextField("");        JLabel lbLogo = new JLabel("DADOS DO CORRETOR");        JLabel lbNome = new JLabel("Nome*:");        JLabel lbCreci = new JLabel("Creci*:");        JLabel lbCpf = new JLabel("CPF*:");        JLabel lbEmail = new JLabel("Email*:");        JLabel lbFone = new JLabel("Telefone*:");        JLabel lbPercCorretagem = new JLabel("Porcentagem de corretagem*:");        //Inicializa Botões        JButton btSubmit = new JButton("Cadastrar");        JButton btCancelar = new JButton("Cancelar");        //seta Layout de pCadastro        pCadastro.setLayout(null);        //Listener dos botões        btSubmit.addActionListener(new ActionListener() {            @Override            public void actionPerformed(ActionEvent e) {                //verifica se tem campo em branco, se tiver não deixa cadastrar                if (tfNome.getText().equals("")                        || tfCpf.getText().equals("") || tfEmail.getText().equals("")                        || tfFone.getText().equals("") || tfCreci.getText().equals("")                        || tfPercCorretagem.getText().equals("")) {                    JOptionPane.showMessageDialog(null,                            "Todos os campos devem ser preenchidos antes da conclusão do cadastro",                            "Error!", JOptionPane.ERROR_MESSAGE);                } else {                    //chama o metodo para cadastrar corretor, que esta no ControleCorretor                    try {                        ctrCorretor.insereCorretor(                                tfCpf.getText(),                                tfNome.getText(),                                tfEmail.getText(),                                tfFone.getText(),                                tfCreci.getText(),                                Double.parseDouble(tfPercCorretagem.getText())                        );                        //limpar os campos do formulario                        tfCpf.setText("");                        tfNome.setText("");                        tfEmail.setText("");                        tfFone.setText("");                        tfCreci.setText("");                        tfPercCorretagem.setText("");                    } catch (Exception err) {                        JOptionPane.showMessageDialog(null,                                "Error ao cadastrar corretor!",                                "Error!", JOptionPane.ERROR_MESSAGE);                    }                }            }        });        btCancelar.addActionListener(new ActionListener() {            @Override            public void actionPerformed(ActionEvent e) {                frCadastra.dispose();            }        });        //-PosiÃ§Ãµes dos elementos-// (x, y, largura, altura)        lbLogo.setBounds(200, 0, 125, 25);        lbNome.setBounds(0, 50, 500, 25);        lbCpf.setBounds(0, 100, 500, 25);        lbCreci.setBounds(0, 150, 500, 25);        lbEmail.setBounds(0, 200, 500, 25);        lbFone.setBounds(0, 250, 500, 25);        lbPercCorretagem.setBounds(0, 300, 500, 25);        tfNome.setBounds(0, 75, 500, 25);        tfCpf.setBounds(0, 125, 500, 25);        tfCreci.setBounds(0, 175, 500, 25);        tfEmail.setBounds(0, 225, 500, 25);        tfFone.setBounds(0, 275, 500, 25);        tfPercCorretagem.setBounds(0, 325, 500, 25);        btSubmit.setBounds(200, 375, 100, 25);        btCancelar.setBounds(200, 425, 100, 25);        //-AdiÃ§Ã£o dos elementos no painel-//        pCadastro.add(lbLogo);        pCadastro.add(lbNome);        pCadastro.add(lbCpf);        pCadastro.add(lbCreci);        pCadastro.add(lbEmail);        pCadastro.add(lbFone);        pCadastro.add(lbPercCorretagem);        pCadastro.add(tfNome);        pCadastro.add(tfCpf);        pCadastro.add(tfCreci);        pCadastro.add(tfEmail);        pCadastro.add(tfFone);        pCadastro.add(tfPercCorretagem);        pCadastro.add(btSubmit);        pCadastro.add(btCancelar);        //Ajustes no frame        frCadastra.setSize(500, 500);        frCadastra.getContentPane().add(pCadastro);        frCadastra.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);        frCadastra.setVisible(true);    }    public void listaCorretores() {        JFrame frConsultar = new JFrame();        JPanel pMain = new JPanel();//Painel principal        JPanel pLabel = new JPanel();//Painel para Armazenar o label inicial        JPanel pButtons = new JPanel();//Painel pra guardar os botÃµes de Editar, Excluir e Cadastrar um novo Corretor        //pMain especificações        pMain.setLayout(null);        //pLabel especificações        pLabel.setLayout(new BorderLayout());        pLabel.add(new JLabel("LISTA DE VENDEDORES"), BorderLayout.CENTER);        /////////////////        //Evitar repetições no JComboBox        ////////////////        //pButtons especificações        pButtons.setLayout(new GridLayout(1, 4, 5, 0));        //Adição dos botões        JButton bCadastrar = new JButton("Cadastrar Novo Corretor");        JButton bEditar = new JButton("Editar Corretor");        JButton bExcluir = new JButton("Excluir Corretor");        bCadastrar.addActionListener(new ActionListener() {            @Override            public void actionPerformed(ActionEvent e) {                if (index != -1) {                    frConsultar.dispose();                    cadastraCorretor();                } else {                    JOptionPane.showMessageDialog(null,                            "Selecione pelomenos um item na lista!",                            "Error!", JOptionPane.ERROR_MESSAGE);                }            }        });        bEditar.addActionListener(new ActionListener() {            @Override            public void actionPerformed(ActionEvent e) {                if (index != -1) {                    frConsultar.dispose();                    editaCorretor(index);                } else {                    JOptionPane.showMessageDialog(null,                            "Selecione pelomenos um item na lista!",                            "Error!", JOptionPane.ERROR_MESSAGE);                }            }        });        bExcluir.addActionListener(new ActionListener() {            @Override            public void actionPerformed(ActionEvent e) {                frConsultar.dispose();                try {                    ctrCorretor.excluiCorretor(index);                } catch (Exception err) {                    JOptionPane.showMessageDialog(null,                            "Error ao excluir o corretor!",                            "Error!", JOptionPane.ERROR_MESSAGE);                }                listaCorretores();            }        });        pButtons.add(bCadastrar);        pButtons.add(bEditar);        pButtons.add(bExcluir);        ArrayList<String> lista = ctrCorretor.getInfoList();        JPanel pLista = new JPanel();        pLista.setLayout(new BoxLayout(pLista, BoxLayout.Y_AXIS));        pLista.add(pLabel);        pLista.add(pButtons);        ButtonGroup grp = new ButtonGroup();        int i = 1;        int y = 110;        if (lista.size() != 0) {            for (String corretor : lista) {                JRadioButton rb = new JRadioButton(String.valueOf(i));                pLista.setBounds(0, y, 50, 100);                rb.setBounds(0, y, 50, 50);                rb.addItemListener(new ItemListener() {                    @Override                    public void itemStateChanged(ItemEvent e) {                        JToggleButton button = (JToggleButton) e.getSource();                        if (e.getStateChange() == ItemEvent.SELECTED) {                            index = Integer.parseInt(button.getText()) - 1;                        }                    }                });                grp.add(rb);                pLista.add(rb);                JTextArea text = new JTextArea(corretor);                text.setBounds(50, y, 500, 100);                pLista.add(text);                i++;                y += 110;            }        }        pLabel.setBounds(0, 0, 500, 50);        pButtons.setBounds(0, 50, 500, 50);        //pLista.setPreferredSize(new Dimension(500, 600));        JScrollPane scroll = new JScrollPane(pLista, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);        frConsultar.setPreferredSize(new Dimension(550, 600));        frConsultar.setLayout(new BorderLayout());        frConsultar.add(scroll, BorderLayout.CENTER);        frConsultar.pack();        //frConsultar.getContentPane().add(scroll);        frConsultar.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);        frConsultar.setSize(900, 600);        frConsultar.setVisible(true);    }    public void editaCorretor(int index) {        //Inicializa Tela        JFrame frEdicao = new JFrame();        //Inicializa Painel        JPanel pEdicao = new JPanel();        Corretor c = ctrCorretor.getListaAll().get(index);        //Inicializa TextFields         JTextField tfNome = new JTextField(c.getNome());        JTextField tfCreci = new JTextField(c.getCreci());        JTextField tfCpf = new JTextField(c.getCpf());        JTextField tfEmail = new JTextField(c.getEmail());        JTextField tfFone = new JTextField(c.getFone());        JTextField tfPercCorretagem = new JTextField(String.valueOf(c.getPercCorretagem()));        JLabel lbLogo = new JLabel("DADOS DO CORRETOR");        JLabel lbNome = new JLabel("Nome*:");        JLabel lbCreci = new JLabel("Creci*:");        JLabel lbCpf = new JLabel("CPF*:");        JLabel lbEmail = new JLabel("Email*:");        JLabel lbFone = new JLabel("Telefone*:");        JLabel lbPercCorretagem = new JLabel("Porcentagem de corretagem*:");        //Inicializa Botões        JButton btSubmit = new JButton("Editar");        JButton btCancelar = new JButton("Cancelar");        //seta Layout de pEdicao        pEdicao.setLayout(null);        //Listener dos botões        btSubmit.addActionListener(new ActionListener() {            @Override            public void actionPerformed(ActionEvent e) {                //verifica se tem campo em branco, se tiver não deixa cadastrar                if (tfNome.getText().equals("")                        || tfCpf.getText().equals("") || tfEmail.getText().equals("")                        || tfFone.getText().equals("") || tfCreci.getText().equals("")                        || tfPercCorretagem.getText().equals("")) {                    JOptionPane.showMessageDialog(null,                            "Todos os campos devem ser preenchidos antes da conclusão do cadastro",                            "Error!", JOptionPane.ERROR_MESSAGE);                } else {                    //chama o metodo para editar corretor, que esta no ControleCorretor                    ctrCorretor.editaCorretor(                            index,                            new Corretor(                                    tfCpf.getText(),                                    tfNome.getText(),                                    tfEmail.getText(),                                    tfFone.getText(),                                    tfCreci.getText(),                                    Double.parseDouble(tfPercCorretagem.getText())                            )                    );                    frEdicao.dispose();                    listaCorretores();                }            }        });        btCancelar.addActionListener(new ActionListener() {            @Override            public void actionPerformed(ActionEvent e) {                frEdicao.dispose();            }        });        //-PosiÃ§Ãµes dos elementos-// (x, y, largura, altura)        lbLogo.setBounds(200, 0, 125, 25);        lbNome.setBounds(0, 50, 500, 25);        lbCpf.setBounds(0, 100, 500, 25);        lbCreci.setBounds(0, 150, 500, 25);        lbEmail.setBounds(0, 200, 500, 25);        lbFone.setBounds(0, 250, 500, 25);        lbPercCorretagem.setBounds(0, 300, 500, 25);        tfNome.setBounds(0, 75, 500, 25);        tfCpf.setBounds(0, 125, 500, 25);        tfCreci.setBounds(0, 175, 500, 25);        tfEmail.setBounds(0, 225, 500, 25);        tfFone.setBounds(0, 275, 500, 25);        tfPercCorretagem.setBounds(0, 325, 500, 25);        btSubmit.setBounds(200, 375, 100, 25);        btCancelar.setBounds(200, 425, 100, 25);        //-AdiÃ§Ã£o dos elementos no painel-//        pEdicao.add(lbLogo);        pEdicao.add(lbNome);        pEdicao.add(lbCpf);        pEdicao.add(lbCreci);        pEdicao.add(lbEmail);        pEdicao.add(lbFone);        pEdicao.add(lbPercCorretagem);        pEdicao.add(tfNome);        pEdicao.add(tfCpf);        pEdicao.add(tfCreci);        pEdicao.add(tfEmail);        pEdicao.add(tfFone);        pEdicao.add(tfPercCorretagem);        pEdicao.add(btSubmit);        pEdicao.add(btCancelar);        //Ajustes no frame        frEdicao.setSize(500, 500);        frEdicao.getContentPane().add(pEdicao);        frEdicao.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);        frEdicao.setVisible(true);    }}