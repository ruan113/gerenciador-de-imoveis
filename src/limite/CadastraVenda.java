/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package limite;

import controle.*;
import java.util.ArrayList;
import java.util.Calendar;
import modelo.*;
import java.util.Date;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author Bento
 */
public class CadastraVenda extends javax.swing.JFrame {

    //controlador
    ControleVenda ctrVenda;
    //recebera o objeto referente ao imovel que será cadastrado na venda
    Imovel objImovel;
    //variavel que recebera o index do elemento que será removido do ArrayList de imoveis
    int indexRemove = 0;

    /**
     * Creates new form CadastraVenda
     */
    public CadastraVenda(ControleVenda ctrVenda) {

        this.ctrVenda = ctrVenda;

        initComponents();

        String[] nomes = new String[ctrVenda.ctrPrincipal.ctrCorretor.getLista().size()];

        int i = 0;
        for (Corretor c : ctrVenda.ctrPrincipal.ctrCorretor.getLista()) {
            nomes[i] = c.getaNome();
            i++;
        }
        cbCorretorResponsavel.setModel(new javax.swing.DefaultComboBoxModel<>(nomes));

        cbDia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"}));

        cbMes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"}));

        int ano = 2010;
        String[] anos = new String[11];
        for (int j = 0; j <= 10; j++) {
            anos[j] = String.valueOf(ano);
            ano++;
        }
        cbAno.setModel(new javax.swing.DefaultComboBoxModel<>(anos));

        /////////////////
        //Evitar repetições no JComboBox
        ////////////////
        //Array para pegar os tipos de imóveis já cadastrados
        ArrayList<String> auxString = new ArrayList<String>();
        //inicializa ComboBox
        for (Imovel imv : ctrVenda.ctrPrincipal.ctrImovel.getLista()) {//abre for 01   
            //se não existir no Array auxiliar o tipo cadastrado
            if (!auxString.contains(imv.getTipo())) {//abre if 01
                auxString.add(imv.getTipo());//adiciona o tipo no Array auxiliar
                cbTipoVender.addItem(imv.getTipo());//adiciona item no comboBox
            }//fecha if 01
        }//fecha for 01

        //zera combobox
        cbImovelDisponivel.removeAllItems();

        //Array para pegar os tipos de imóveis já cadastrados
        ArrayList<Imovel> auxImovel = new ArrayList<Imovel>();

        //for para pegar os codigos de imoveis disponiveis para venda
        //onde não pegará os repetidos, graças ao if
        for (Imovel imv : ctrVenda.ctrPrincipal.ctrImovel.getLista()) {//abre for 01        
            if (String.valueOf(cbTipoVender.getSelectedItem()).equals(imv.getTipo())) {
                auxImovel.add(imv);//adiciona imovel no Array auxiliar
                cbImovelDisponivel.addItem(imv.getCodigo());
                //atribui objeto imovel para a variavel objImovel, será armazenado
                //no arquivo de vendas
                objImovel = imv;
                //pega o index do imovel selecionado
                indexRemove = ctrVenda.ctrPrincipal.ctrImovel.getLista().indexOf(imv);
                System.out.println("Index remover: " + indexRemove);
            }
        }//fecha for 01

//        this.setDefaultCloseOperation(HIDE_ON_CLOSE);
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lbNomeComprador = new javax.swing.JLabel();
        tfNomeComprador = new javax.swing.JTextField();
        lbNomeCorretor = new javax.swing.JLabel();
        cbCorretorResponsavel = new javax.swing.JComboBox<String>();
        tfValorReal = new javax.swing.JTextField();
        lbValorReal = new javax.swing.JLabel();
        lbData = new javax.swing.JLabel();
        lbDia = new javax.swing.JLabel();
        lbMes = new javax.swing.JLabel();
        lbAno = new javax.swing.JLabel();
        cbDia = new javax.swing.JComboBox<String>();
        cbAno = new javax.swing.JComboBox<String>();
        cbMes = new javax.swing.JComboBox<String>();
        btCadastrar = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();
        lbTipoImovelVender = new javax.swing.JLabel();
        cbTipoVender = new javax.swing.JComboBox();
        lbImovelDisponivel = new javax.swing.JLabel();
        cbImovelDisponivel = new javax.swing.JComboBox();
        lbValorNegociado = new javax.swing.JLabel();
        tfValorNegociado = new javax.swing.JTextField();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("frCadastraVenda"); // NOI18N

        jPanel2.setName(""); // NOI18N

        lbNomeComprador.setText("Nome do Comprador:");

        tfNomeComprador.setName("tfNomeComprador"); // NOI18N
        tfNomeComprador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNomeCompradorActionPerformed(evt);
            }
        });

        lbNomeCorretor.setText("Nome do Corretor Responsável:");

        cbCorretorResponsavel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCorretorResponsavelActionPerformed(evt);
            }
        });

        tfValorReal.setEditable(false);
        tfValorReal.setName("tfValorReal"); // NOI18N
        tfValorReal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfValorRealActionPerformed(evt);
            }
        });

        lbValorReal.setText("Valor Real:");

        lbData.setText("Data:");

        lbDia.setText("Dia:");

        lbMes.setText("Mes:");

        lbAno.setText("Ano:");

        cbDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDiaActionPerformed(evt);
            }
        });

        btCadastrar.setText("Cadastrar");
        btCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCadastrarActionPerformed(evt);
            }
        });

        btCancelar.setText("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        lbTipoImovelVender.setText("Tipo de imóvel a vender:");

        cbTipoVender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTipoVenderActionPerformed(evt);
            }
        });

        lbImovelDisponivel.setText("Imóveis disponiveis:");

        cbImovelDisponivel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbImovelDisponivelActionPerformed(evt);
            }
        });

        lbValorNegociado.setText("Valor negociado:");

        tfValorNegociado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfValorNegociadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbNomeComprador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfNomeComprador)
                    .addComponent(lbNomeCorretor, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
                    .addComponent(lbValorReal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfValorReal)
                    .addComponent(cbTipoVender, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbCorretorResponsavel, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbImovelDisponivel, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbTipoImovelVender)
                            .addComponent(lbImovelDisponivel)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lbDia)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbMes)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbAno)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btCadastrar)
                                .addGap(18, 18, 18)
                                .addComponent(btCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lbValorNegociado))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(tfValorNegociado))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbTipoImovelVender)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbTipoVender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbImovelDisponivel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbImovelDisponivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbNomeComprador)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfNomeComprador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbNomeCorretor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbCorretorResponsavel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbValorReal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfValorReal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbValorNegociado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfValorNegociado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(lbData)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDia)
                    .addComponent(lbMes)
                    .addComponent(lbAno)
                    .addComponent(cbDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btCancelar)
                    .addComponent(btCadastrar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbCorretorResponsavelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCorretorResponsavelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbCorretorResponsavelActionPerformed

    private void tfValorRealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfValorRealActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfValorRealActionPerformed

    private void btCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCadastrarActionPerformed
        if (tfNomeComprador.getText().equals("") || tfValorReal.getText().equals("") || tfValorNegociado.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Todos os campos devem ser preenchidos antes da conclusão do cadastro", "Error!", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                Calendar data = Calendar.getInstance();
                data.set(Integer.parseInt(String.valueOf(cbAno.getSelectedItem())), Integer.parseInt(String.valueOf(cbMes.getSelectedItem())), Integer.parseInt(String.valueOf(cbDia.getSelectedItem())));

                for (Corretor c : ctrVenda.ctrPrincipal.ctrCorretor.getLista()) {
                    if (c.getaNome().equals(cbCorretorResponsavel.getSelectedItem().toString())) {
                        //chama metodo para cadastrar a venda
                        ctrVenda.cadastraVenda(tfNomeComprador.getText(), data,
                                c,
                                Double.parseDouble(tfValorNegociado.getText()), objImovel
                        );
                    }
                }

                //chama metodo para remover imovel
                System.out.println("No clicar do botao Index remover: " + indexRemove);
                ctrVenda.ctrPrincipal.ctrImovel.removeLista(indexRemove);
                JOptionPane.showMessageDialog(null, "Venda efetuada com sucesso!!!");
                //fecha esta janela
                this.dispose();
                //chama este formulario novamente
                ctrVenda.mostraFormulario();

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        }
    }//GEN-LAST:event_btCadastrarActionPerformed

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btCancelarActionPerformed

    private void tfNomeCompradorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNomeCompradorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNomeCompradorActionPerformed

    private void cbDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbDiaActionPerformed

    private void cbTipoVenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTipoVenderActionPerformed
        //zera comboBox
        cbImovelDisponivel.removeAllItems();
        //for para pegar os codigos de imoveis disponiveis para venda
        for (Imovel imv : ctrVenda.ctrPrincipal.ctrImovel.getLista()) {//abre for 01
            //verifica se o item selecionado no combobox cbTipoVender é igual o tipo contido no vetor
            //se for igual, adiciona os códigos do tipo selecionado no combobox
            if (String.valueOf(cbTipoVender.getSelectedItem()).equals(imv.getTipo())) {//abre if 01
                //adiciona o códgio no combobox
                cbImovelDisponivel.addItem(imv.getCodigo());
            }//fecha if 01

        }//fecha for 01          

    }//GEN-LAST:event_cbTipoVenderActionPerformed

    private void cbImovelDisponivelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbImovelDisponivelActionPerformed

        //for para pegar o valor real do item selecionado
        for (Imovel imv : ctrVenda.ctrPrincipal.ctrImovel.getLista()) {//abre for 01
            //verifica se o codigo da lista de imoveis é igual o codigo selecionado no combobox cbImovelDisponivel
            if (String.valueOf(imv.getCodigo()).equals(String.valueOf(cbImovelDisponivel.getSelectedItem()))) {//abre if 01
                //seta o JTextField tfValorReal com o valor do imovel
                tfValorReal.setText(String.valueOf(imv.getPrecoSolicitado()));
                //pega o imovel selecionado e passa para a variavel objImovel
                //pois este imovel será gravado no arquivo de vendas
                objImovel = imv;
                //pega o index do imovel selecionado
                indexRemove = ctrVenda.ctrPrincipal.ctrImovel.getLista().indexOf(imv);
                System.out.println("Index remover: " + indexRemove);
            }//fecha if 01
        }//fecha for 01

    }//GEN-LAST:event_cbImovelDisponivelActionPerformed

    private void tfValorNegociadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfValorNegociadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfValorNegociadoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCadastrar;
    private javax.swing.JButton btCancelar;
    private javax.swing.JComboBox<String> cbAno;
    private javax.swing.JComboBox<String> cbCorretorResponsavel;
    private javax.swing.JComboBox<String> cbDia;
    private javax.swing.JComboBox cbImovelDisponivel;
    private javax.swing.JComboBox<String> cbMes;
    private javax.swing.JComboBox cbTipoVender;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lbAno;
    private javax.swing.JLabel lbData;
    private javax.swing.JLabel lbDia;
    private javax.swing.JLabel lbImovelDisponivel;
    private javax.swing.JLabel lbMes;
    private javax.swing.JLabel lbNomeComprador;
    private javax.swing.JLabel lbNomeCorretor;
    private javax.swing.JLabel lbTipoImovelVender;
    private javax.swing.JLabel lbValorNegociado;
    private javax.swing.JLabel lbValorReal;
    private javax.swing.JTextField tfNomeComprador;
    private javax.swing.JTextField tfValorNegociado;
    private javax.swing.JTextField tfValorReal;
    // End of variables declaration//GEN-END:variables
}
