package limite;import Model.*;import controle.*;import limite.*;import java.awt.event.*;import javax.swing.*;import limite.relatorios.formEventosImovel;import limite.relatorios.formImoveisVendedor;import limite.relatorios.formValorPorCorretorPeriodo;import limite.relatorios.formValorTotalPeriodo;import limite.relatorios.formVendasPeriodo;import limite.relatorios.formVisitasCorretorPeriodo;public class LimitePrincipal extends JFrame implements ActionListener {    //controlador    ControlePrincipal ctrPrincipal;//objeto responsável pelo controle desta visao    //limite    LimiteCorretor lmtCorretor;    JPanel panel;//Painel principal    //declaração dos Menus    JMenu smCadastrar;    JMenu mCorretor;    //JMenu smContratado;//submenu    //Declaração dos itens dos menus    JMenuItem miCadastImovel;    JMenuItem miConsulImovel;    JMenuItem miCadastCorretor;    JMenuItem miListCorretor;    JMenuItem miCadastComprador;    JMenuItem miListComprador;    JMenuItem miCadastProposta;    JMenuItem miConsulProposta;    JMenuItem miCadastVisita;    JMenuItem miConsulVisita;    JMenuItem miCadastVendedor;    JMenuItem miConsulVendedor;    JMenuItem miRelatorioEventos;    JMenuItem miRelatorioImovelVendedor;    JMenuItem miRelatorioValorPorCorretor;    JMenuItem miRelatorioValorTotal;    JMenuItem miRelatorioVendas;    JMenuItem miRelatorioVisitasCorretor;    //construtor, passa o controle para o construtor    public LimitePrincipal(ControlePrincipal ctrPrincipal) {        this.ctrPrincipal = ctrPrincipal;//Armazena o controlador Principal numa variavel        // Constrói a barra de menus        JMenuBar mb = new JMenuBar();        setJMenuBar(mb);//setMenu adiciona o menu o JFrame        // Constrói um menu e o adiciona a barra        JMenu mImovel = new JMenu("Imóvel", true);        //adiciona o menu m na barra JMenuBar        mb.add(mImovel);        //////////////////////        //INICIO MENU DO CORRETOR//        //////////////////////            mCorretor = new JMenu("Corretor", true);// Constrói um menu e o adiciona a barra        mb.add(mCorretor);//adiciona o menu mCorretor na barra JMenuBar                            //////////////////////        //FIM MENU DO CORRETOR//        //////////////////////        // Constrói um menu e o adiciona a barra        JMenu mComprador = new JMenu("Comprador", true);        //adiciona o menu m na barra JMenuBar        mb.add(mComprador);        // Constrói um menu e o adiciona a barra        JMenu mPropostas = new JMenu("Propostas", true);        //adiciona o menu m na barra JMenuBar        mb.add(mPropostas);        // Constrói um menu e o adiciona a barra        JMenu mVisitas = new JMenu("Visitas", true);        //adiciona o menu m na barra JMenuBar        mb.add(mVisitas);        // Constrói um menu e o adiciona a barra        JMenu mVendedor = new JMenu("Vendedor", true);        //adiciona o menu m na barra JMenuBar        mb.add(mVendedor);        // Constrói um menu e o adiciona a barra        JMenu mRelatorios = new JMenu("Relatórios", true);        //adiciona o menu mRelatorios na barra JMenuBar        mb.add(mRelatorios);        // Cria um item de menu e o adiciona ao submenu        //possui todas as propriedades comuns de um botão        miCadastImovel = new JMenuItem("Cadastrar");        mImovel.add(miCadastImovel);//adicionar o menu item no sub menu sm        miCadastImovel.addActionListener(this);//adicionar listener no miCadastImovel        // Cria um item de menu e o adiciona ao submenu        //possui todas as propriedades comuns de um botão        miConsulImovel = new JMenuItem("Consultar");        mImovel.add(miConsulImovel);//adicionar o menu item no sub menu sm        miConsulImovel.addActionListener(this);//adicionar listener        miCadastCorretor = new JMenuItem("Cadastrar");// Cria um item de menu e o adiciona ao submenu        mCorretor.add(miCadastCorretor);//adicionar o menu item no mCorretor                miCadastCorretor.addActionListener(this);//adiciona listener aqui                miListCorretor = new JMenuItem("Listar");// Cria um item de menu e o adiciona ao submenu        mCorretor.add(miListCorretor);//adicionar o menu item no mCorretor                miListCorretor.addActionListener(this);//adiciona listener aqui           // Cria um item de menu e o adiciona ao submenu        //possui todas as propriedades comuns de um botão        miCadastComprador = new JMenuItem("Cadastrar");        mComprador.add(miCadastComprador);//adicionar o menu item no sub menu sm        miCadastComprador.addActionListener(this);//adicionar listener no miCadastImovel        // Cria um item de menu e o adiciona ao submenu        //possui todas as propriedades comuns de um botão        miListComprador = new JMenuItem("Consultar");        mComprador.add(miListComprador);//adicionar o menu item no sub menu sm        miListComprador.addActionListener(this);//adicionar listener        // Cria um item de menu e o adiciona ao submenu        //possui todas as propriedades comuns de um botão        miConsulProposta = new JMenuItem("Consultar Propostas");        mPropostas.add(miConsulProposta);//adicionar o menu item no sub menu sm        miConsulProposta.addActionListener(this);//adicionar listener        // Cria um item de menu e o adiciona ao submenu        //possui todas as propriedades comuns de um botão        miConsulVisita = new JMenuItem("Consultar Visitas");        mVisitas.add(miConsulVisita);//adicionar o menu item no sub menu sm        miConsulVisita.addActionListener(this);//adicionar listener        // Cria um item de menu e o adiciona ao submenu        //possui todas as propriedades comuns de um botão        miCadastVendedor = new JMenuItem("Cadastrar");        mVendedor.add(miCadastVendedor);//adicionar o menu item no sub menu sm        miCadastVendedor.addActionListener(this);//adicionar listener        // Cria um item de menu e o adiciona ao submenu        //possui todas as propriedades comuns de um botão        miConsulVendedor = new JMenuItem("Consultar");        mVendedor.add(miConsulVendedor);//adicionar o menu item no sub menu sm        miConsulVendedor.addActionListener(this);//adicionar listener        // Cria um item de menu e o adiciona ao submenu        //possui todas as propriedades comuns de um botão        miRelatorioEventos = new JMenuItem("Relatorio de Eventos");        mRelatorios.add(miRelatorioEventos);//adicionar o menu item no sub menu sm        miRelatorioEventos.addActionListener(this);//adicionar listener        miRelatorioImovelVendedor = new JMenuItem("Relatorio de Imoveis/Vendedor");        mRelatorios.add(miRelatorioImovelVendedor);//adicionar o menu item no sub menu sm        miRelatorioImovelVendedor.addActionListener(this);//adicionar listener                // Cria um item de menu e o adiciona ao submenu        //possui todas as propriedades comuns de um botão        miRelatorioValorPorCorretor = new JMenuItem("Relatorio de Valor/Corretor");        mRelatorios.add(miRelatorioValorPorCorretor);//adicionar o menu item no sub menu sm        miRelatorioValorPorCorretor.addActionListener(this);//adicionar listener        miRelatorioValorTotal = new JMenuItem("Relatorio de Valor Total");        mRelatorios.add(miRelatorioValorTotal);//adicionar o menu item no sub menu sm        miRelatorioValorTotal.addActionListener(this);//adicionar listener        miRelatorioVendas = new JMenuItem("Relatorio de Vendas");        mRelatorios.add(miRelatorioVendas);//adicionar o menu item no sub menu sm        miRelatorioVendas.addActionListener(this);//adicionar listener        miRelatorioVisitasCorretor = new JMenuItem("Relatorio de Visitas/Corretor");        mRelatorios.add(miRelatorioVisitasCorretor);//adicionar o menu item no sub menu sm        miRelatorioVisitasCorretor.addActionListener(this);//adicionar listener        //Inicialiação dos conteudos        panel = new JPanel();        JButton btCatalago = new JButton("Catalogo de Servico");        btCatalago.setBounds(150, 200, 200, 25);        btCatalago.addActionListener(new ActionListener() {            @Override            public void actionPerformed(ActionEvent ae) {                ctrPrincipal.lmtCatalogo.showCatalogo();            }        });        panel.add(btCatalago);        //Setagem da tela        panel.setLayout(null);        this.add(panel);        this.setSize(500, 500);        //Finalização para exibição na tela        getContentPane().add(panel);        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);        setVisible(true);    }    @Override    public void actionPerformed(ActionEvent ae) {        if (ae.getSource().equals(miCadastImovel)) {//se selecionar o cadastrar do imovel            ctrPrincipal.ctrImovel.lmtImovel.cadastraImovel();        }        if (ae.getSource().equals(miConsulImovel)) {//se selecionar a consulta do imovel            ctrPrincipal.ctrImovel.lmtImovel.listaImoveis("Todos");        }        if (ae.getSource().equals(miCadastComprador)) {//se selecionar o cadastrar do imovel            ctrPrincipal.ctrComprador.lmtComprador.cadastraComprador();        }        if (ae.getSource().equals(miListComprador)) {//se selecionar a consulta do imovel            ctrPrincipal.ctrComprador.lmtComprador.listaCompradores();        }        if (ae.getSource().equals(miCadastCorretor)) {//se selecionar o cadastrar do corretor            //new ControleCorretor();//chama controlador do corretor contratado            ctrPrincipal.ctrCorretor.lmtCorretor.cadastraCorretor();        }        if (ae.getSource().equals(miListCorretor)) {            ctrPrincipal.ctrCorretor.lmtCorretor.listaCorretores();        }        if (ae.getSource().equals(miCadastVisita)) {            ctrPrincipal.ctrVisita.lmtVisita.cadastraVisita(0);        }        if (ae.getSource().equals(miCadastVendedor)) {            ctrPrincipal.ctrVendedor.lmtVendedor.cadastraVendedor();        }        if (ae.getSource().equals(miConsulVendedor)) {            ctrPrincipal.ctrVendedor.lmtVendedor.listaVendedores();        }        if (ae.getSource().equals(miRelatorioEventos)) {            ctrPrincipal.lmtRelatorio.showRelatorio(                    new formEventosImovel(                            this.ctrPrincipal                    ));        }        if (ae.getSource().equals(miRelatorioImovelVendedor)) {            ctrPrincipal.lmtRelatorio.showRelatorio(                    new formImoveisVendedor(                            this.ctrPrincipal                    )            );        }        if (ae.getSource().equals(miRelatorioValorPorCorretor)) {            ctrPrincipal.lmtRelatorio.showRelatorio(                    new formValorPorCorretorPeriodo(                            this.ctrPrincipal                    )            );        }        if (ae.getSource().equals(miRelatorioValorTotal)) {            ctrPrincipal.lmtRelatorio.showRelatorio(                    new formValorTotalPeriodo(                            this.ctrPrincipal                    )            );        }        if (ae.getSource().equals(miRelatorioVendas)) {            ctrPrincipal.lmtRelatorio.showRelatorio(                    new formVendasPeriodo(                            this.ctrPrincipal                    )            );        }        if (ae.getSource().equals(miRelatorioVisitasCorretor)) {            ctrPrincipal.lmtRelatorio.showRelatorio(                    new formVisitasCorretorPeriodo(                            this.ctrPrincipal                    )            );        }    }}